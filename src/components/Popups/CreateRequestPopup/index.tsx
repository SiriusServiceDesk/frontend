import { yupResolver } from '@hookform/resolvers/yup'
import { useForm } from 'react-hook-form'
import cross from '../../../assets/cross.svg'
import info from '../../../assets/info.svg'
import selectedSvg from '../../../assets/selected.svg'
import { createReqDefaultValues } from '../schema/createReqDefaultValues'
import { createReqValidationSchema } from '../schema/createReqValidationSchema'
import { CreateReqFormValues } from '../types/CreateReqFormValues'
import { CreateReqPopupProps } from '../types/CreateReqPopupProps'

import { tailChase } from 'ldrs'
import { useState } from 'react'
import { useCreateRequestMutation } from '../../../redux/services/application'
import { Performers } from '../../../types/Performers'
import styles from './CreateRequestPopup.module.scss'

export const CreateRequestPopup: React.FC<CreateReqPopupProps> = ({
	setSelfOpened,
}) => {
	const [selectedPerformer, setSelectedPerformer] = useState<
		number | undefined
	>()
	const [create, { isLoading, isError }] = useCreateRequestMutation()

	const {
		register,
		clearErrors,
		formState: { errors },
		handleSubmit,
		reset,
	} = useForm<CreateReqFormValues>({
		defaultValues: createReqDefaultValues,
		mode: 'onChange',
		resolver: yupResolver(createReqValidationSchema),
	})

	const onSubmit = (data: CreateReqFormValues) => {
		const { title, comment } = data
		create({
			title,
			comment,
			performer:
				selectedPerformer !== undefined ? Performers[selectedPerformer] : '',
		}).then((response: any) => {
			if (!response.error) {
				setSelfOpened(false)
				window.location.reload()
			} else {
				console.log(response.error)
			}
		})

		reset()
		clearErrors()
	}

	tailChase.register()

	return (
		<div className='popup'>
			<div
				className='popup-backdrop'
				onClick={() => setSelfOpened(false)}
			></div>
			<div className='popup-wrapper'>
				<div className='popup-wrapper__heading'>
					<h1>–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</h1>
					<img
						className='create-request__cross'
						src={cross}
						alt='cross'
						onClick={() => setSelfOpened(false)}
					/>
				</div>

				<form onSubmit={handleSubmit(onSubmit)} className={styles.form}>
					<span>–ù–∞–∑–≤–∞–Ω–∏–µ</span>
					<input {...register('title')} placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏' />
					{errors?.title && <p>{errors.title.message}</p>}
					<span>–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ </span>{' '}
					<textarea {...register('comment')} />
					{errors?.comment && <p>{errors.comment.message}</p>}
					<div className={styles.selectPerformer}>
						<div className={styles.selectPerformerHeading}>
							<span>–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª</span>
							<img src={info} alt='info' className={styles.info} />
							<div className={styles.infoBlock}>
								<h2>
									<b>üíª</b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª
								</h2>
								<span>
									–ó–∞—è–≤–∫–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—è–º–∏ —Ç–µ—Ö–Ω–∏–∫–∏, –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏ –∏ –ú–§–£,
									—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –í–ö–°
								</span>
								<h2>
									<b>üìÑ</b> –ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª
								</h2>
								<span>
									–£—á–µ–±–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —É—á–µ–±–Ω—ã–º –æ—Ñ–∏—Å–æ–º,
									–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
								</span>
								<h2>
									<b>üìñ</b>–£—á–µ–±–Ω—ã–π –æ—Ñ–∏—Å
								</h2>
								<span>
									–ü–µ—Ä–µ–≤–æ–¥ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –æ—Ç—á–∏—Å–ª–µ–Ω–∏–µ, –≤—ã–¥–∞—á–∞ —Å–ø—Ä–∞–≤–æ–∫ –æ–± –æ–±—É—á–µ–Ω–∏–∏,
									–≤–æ–µ–Ω–∫–æ–º–∞—Ç, –±—é–¥–∂–µ—Ç–Ω–∞—è/–ø–ª–∞—Ç–Ω–∞—è –æ—Å–Ω–æ–≤–∞ –æ–±—É—á–µ–Ω–∏—è,{' '}
								</span>
								<h2>
									<b>üõèÔ∏è</b>–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞
								</h2>
								<span>
									–ü–æ–ª–æ–º–∫–∏ –≤ —Å—Ä–µ–¥—Å—Ç–≤–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è, –≤—ã–¥–∞—á–∞ —á–µ–∫-–ª–∏—Å—Ç–æ–≤, –≤–æ–ø—Ä–æ—Å—ã –æ
									–ø–µ—Ä–µ—Å–µ–ª–µ–Ω–∏–∏
								</span>
								<h2>
									<b>üß∏</b>–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–¥–µ–ª
								</h2>
								<span>
									–í–æ–ø—Ä–æ—Å—ã –ø–æ –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ, –¥–µ–∂—É—Ä–Ω—ã–π –≤–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å
								</span>
							</div>
						</div>
						<ul>
							<li
								onClick={() => setSelectedPerformer(0)}
								className={selectedPerformer === 0 ? styles.selected : ''}
							>
								<b>üíª</b>
								–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª
								<img src={selectedSvg} alt='sel' />
							</li>
							<li
								onClick={() => setSelectedPerformer(1)}
								className={selectedPerformer === 1 ? styles.selected : ''}
							>
								<b>üìÑ</b>
								–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª
								<img src={selectedSvg} alt='sel' />
							</li>
							<li
								onClick={() => setSelectedPerformer(2)}
								className={selectedPerformer === 2 ? styles.selected : ''}
							>
								<b>üìñ</b>
								–£—á–µ–±–Ω—ã–π –æ—Ñ–∏—Å
								<img src={selectedSvg} alt='sel' />
							</li>
							<li
								onClick={() => setSelectedPerformer(3)}
								className={selectedPerformer === 3 ? styles.selected : ''}
							>
								<b>üõèÔ∏è</b>
								–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞
								<img src={selectedSvg} alt='sel' />
							</li>
							<li
								onClick={() => setSelectedPerformer(4)}
								className={selectedPerformer === 4 ? styles.selected : ''}
							>
								<b>üß∏</b>
								–í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–¥–µ–ª
								<img src={selectedSvg} alt='sel' />
							</li>
						</ul>
					</div>
					<button type='submit'>
						{isLoading ? (
							<l-tail-chase size='30' speed='1.75' color='white'></l-tail-chase>
						) : (
							'–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'
						)}
					</button>
				</form>
				{isError && <span className='login-error'>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...</span>}
			</div>
		</div>
	)
}
